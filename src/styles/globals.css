@import "tailwindcss";
@import "tw-animate-css";

@custom-variant dark (&:is(.dark *));

:root {
  --background: rgb(253, 247, 196);
  --secondary-background: rgb(255, 255, 255);
  --header-background: rgb(243, 214, 95);
  --card-bg: rgb(255, 239, 186);
  --foreground: rgb(0, 0, 0);
  --main-foreground: rgb(0, 0, 0);
  --main: rgb(255, 176, 59);
  --border: rgb(0, 0, 0);
  --ring: rgb(0, 0, 0);
  --overlay: rgb(0, 0, 0, 0.8);
  --shadow: 2px 2px 0px 0px var(--border);
  --sb-track-color: rgb(255, 247, 187);
  --sb-thumb-color: rgb(181, 125, 42);
}

.dark {
  --background: rgb(24, 24, 27);
  --secondary-background: rgb(39, 39, 42);
  --header-background: rgb(63, 63, 70);
  --card-bg: rgb(45, 45, 55);
  --foreground: rgb(244, 244, 245);
  --main-foreground: rgb(24, 24, 27);
  --main: rgb(250, 204, 21);
  --border: rgb(0, 0, 0);
  --ring: rgb(250, 204, 21);
  --shadow: 2px 2px 0px 0px var(--border);
  --sb-track-color: rgb(39, 39, 42);
  --sb-thumb-color: rgb(250, 204, 21);
}

@theme inline {
  --color-main: var(--main);
  --color-background: var(--background);
  --color-secondary-background: var(--secondary-background);
  --color-header-background: var(--header-background);
  --color-card-background: var(--card-bg);
  --color-foreground: var(--foreground);
  --color-main-foreground: var(--main-foreground);
  --color-border: var(--border);
  --color-overlay: var(--overlay);
  --color-ring: var(--ring);

  --spacing-boxShadowX: 2px;
  --spacing-boxShadowY: 2px;
  --spacing-reverseBoxShadowX: -2px;
  --spacing-reverseBoxShadowY: -2px;
  --radius-base: 15px;
  --shadow-shadow: var(--shadow);
  --font-weight-base: 500;
  --font-weight-heading: 700;
}

/* Custom Scrollbar Styles */
::-webkit-scrollbar {
  width: 16px;
  height: 8px;
}

::-webkit-scrollbar-track {
  background: var(--sb-track-color);
}

::-webkit-scrollbar-thumb {
  background: var(--sb-thumb-color);
}

.narrow-scrollbar::-webkit-scrollbar {
  width: 10px;
  height: 5px;
}

@supports not selector(::-webkit-scrollbar) {
  * {
    scrollbar-color: var(--sb-thumb-color) var(--sb-track-color);
  }

  .no-scrollbar {
    scrollbar-width: none;
  }
}

@supports (scrollbar-color: auto) {
  * {
    scrollbar-color: var(--sb-thumb-color) var(--sb-track-color);
  }
}

/* view transition */
::view-transition-group(root) {
  animation-timing-function: var(--expo-out);
}

::view-transition-new(root) {
  mask: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 40 40"><defs><filter id="blur"><feGaussianBlur stdDeviation="2"/></filter></defs><circle cx="40" cy="0" r="18" fill="white" filter="url(%23blur)"/></svg>') top right / 0 no-repeat;
  mask-origin: content-box;
  animation: scale 1s;
  transform-origin: top right;
}

::view-transition-old(root),
.dark::view-transition-old(root) {
  animation: scale 1s;
  transform-origin: top right;
  z-index: -1;
}

@keyframes scale {
  to {
    mask-size: 350vmax;
  }
}

/* container class */
.layout-container {
  margin-left: auto;
  margin-right: auto;
  padding-left: 1rem;
  padding-right: 1rem;
  width: 100%;
  max-width: 100%;
  box-sizing: border-box;
}

@media (min-width: 640px) {
  .layout-container {
    max-width: 640px;
    padding-left: 1.5rem;
    padding-right: 1.5rem;
  }
}

@media (min-width: 768px) {
  .layout-container {
    max-width: 768px;
  }
}

@media (min-width: 1024px) {
  .layout-container {
    max-width: 1024px;
  }
}

@media (min-width: 1280px) {
  .layout-container {
    max-width: 1280px;
    padding-left: 2rem;
    padding-right: 2rem;
  }
}

/* waving hand */
.wave {
  animation-name: wave-animation;
  animation-duration: 2.5s;
  animation-iteration-count: infinite;
  transform-origin: 70% 70%;
  display: inline-block;
}

@keyframes wave-animation {
  0% {
    transform: rotate(0.0deg)
  }

  10% {
    transform: rotate(14.0deg)
  }

  20% {
    transform: rotate(-8.0deg)
  }

  30% {
    transform: rotate(14.0deg)
  }

  40% {
    transform: rotate(-4.0deg)
  }

  50% {
    transform: rotate(10.0deg)
  }

  60% {
    transform: rotate(0.0deg)
  }

  80% {
    transform: rotate(10.5deg)
  }

  100% {
    transform: rotate(0.0deg)
  }
}